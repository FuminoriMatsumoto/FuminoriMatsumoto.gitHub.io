---
import Svg from "@/components/Svg/Svg.astro";
import { fmtTime } from "@/utils/index";
import SITE_CONFIG from "@/config";
const { Avatar, Author, Motto, WebSites, AsideShow, Tips } = SITE_CONFIG;

import { getCategories, getTags, getRecommendArticles, getCountInfo } from "@/utils/getPostInfo";

const categories = getCategories();
const tags = getTags().slice(0, 16);
const CountInfo = getCountInfo();
const recommendArticles = getRecommendArticles();

import "./Aside.less";
---

<aside class="vh-aside">
  <!-- 用户信息块 -->
  <section class="vh-aside-item user">
    <div class="vh-aside-avatar">
      <img src="/assets/images/lazy-loading.webp" data-vh-lz-src={Avatar} alt={Author} />
    </div>
    <span class="vh-aside-auther">{Author}</span>
    <p class="vh-aside-motto">{Motto}</p>

    <!-- GitHub 图标按钮 -->
    {WebSites.find(site => site.text === "Github") && (
      <a
        class="vh-aside-icon-btn"
        href={WebSites.find(site => site.text === "Github").link}
        target="_blank"
        rel="noopener"
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
             viewBox="0 0 24 24" fill="none" stroke="currentColor"
             stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
             class="icon icon-tabler icons-tabler-outline icon-tabler-brand-github">
          <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
          <path d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5
                   c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6
                   a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2
                   s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0
                   c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2
                   a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6
                   c-.6 .6 -.6 1.2 -.5 2v3.5" />
        </svg>
      </a>
    )}

    <!-- 统计信息 -->
    <section class="vh-aside-info">
      <div class="art-item count">
        <span>{CountInfo.ArticleCount}</span>
        <p>文章数</p>
      </div>
      <div class="cat-item count">
        <span>{CountInfo.CategoryCount}</span>
        <p>分类数</p>
      </div>
      <div class="tag-item count">
        <span>{CountInfo.TagCount}</span>
        <p>标签数</p>
      </div>
    </section>

    <!-- 点击头像彩带/粒子效果 -->
    <canvas class="vh-aside-canvas" width="888" height="1888"></canvas>
  </section>

  <!-- 公告 -->
  {Tips && (
    <section class="vh-aside-item tips">
      <span>公告</span>
      <div class="tips-content">
        <Fragment set:html={Tips} />
      </div>
    </section>
  )}

  <!-- 分类 -->
  {AsideShow?.CategoriesShow && (
    <section class="vh-aside-item cat">
      <h3>分类</h3>
      <div class="vh-aside-cat">
        {categories
          .sort((a: any, b: any) => b.count - a.count)
          .map(i => (
            <a href={`/categories/${i.title}`}>
              <span>{i.title}</span>
              <i>{i.count}</i>
            </a>
          ))}
      </div>
    </section>
  )}

  <!-- 标签 -->
  {AsideShow?.TagsShow && (
    <section class="vh-aside-item tags">
      <h3>热门标签</h3>
      <div class="vh-aside-tags">
        {tags.map(i => (
          <a href={`/tag/${i[0]}`}>
            <span>{i[0]}</span>
            <em>{i[1]}</em>
          </a>
        ))}
      </div>
    </section>
  )}

  <!-- 推荐文章 -->
  {AsideShow?.recommendArticleShow && recommendArticles.length > 0 && (
    <section class="vh-aside-item articles">
      <h3>推荐文章</h3>
      <div class="vh-aside-articles">
        {recommendArticles.map((i, idx) => (
          <a href={`/article/${i.id}`}>
            <span class="article-title">
              <b class="article-index">{idx + 1}</b>
              <cite class="vh-ellipsis">{i.title}</cite>
            </span>
            <time>{fmtTime(i.date, "YYYY-MM-DD")}</time>
          </a>
        ))}
      </div>
    </section>
  )}

  <!-- 友情链接 -->
  {AsideShow?.WebSitesShow && WebSites?.length > 0 && (
    <section class="vh-aside-item websites">
      <h3>我的站点</h3>
      <div class="vh-aside-links">
        {WebSites.map(site => (
          <a href={site.link} target="_blank" rel="noopener">
            <span>{site.text}</span>
          </a>
        ))}
      </div>
    </section>
  )}
</aside>

<!-- 点击头像触发彩带/粒子效果脚本 -->
<script>
  const avatar = document.querySelector('.vh-aside-avatar');
  const canvas = document.querySelector('.vh-aside-canvas');
  if (avatar && canvas) {
    const ctx = canvas.getContext('2d');
    const particles = [];
    function Particle(x, y) {
      this.x = x;
      this.y = y;
      this.size = Math.random() * 5 + 2;
      this.speedY = Math.random() * 3 + 1;
      this.color = `hsl(${Math.random() * 360}, 70%, 60%)`;
    }
    Particle.prototype.update = function() { this.y += this.speedY; };
    Particle.prototype.draw = function() {
      ctx.beginPath();
      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
      ctx.fillStyle = this.color;
      ctx.fill();
    };
    function animate() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      for (let i = 0; i < particles.length; i++) {
        particles[i].update();
        particles[i].draw();
      }
      requestAnimationFrame(animate);
    }
    animate();
    avatar.addEventListener('click', e => {
      const rect = canvas.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      for (let i = 0; i < 20; i++) {
        particles.push(new Particle(x, y));
      }
    });
  }
</script>
